version: "3"
services:
  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/certs:/certs
    depends_on:
      - web
    networks:
      - webdbnet

  web:
    build: ./web
    volumes:
      # Example of host volume mounted in container
       - ./web:/var/www/html
      # Example of docker volume mounted in container
      #- web-data:/var/www/html
    depends_on:
      - redis
    networks:
      - webdbnet

  db:
    # build: ./mysql
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./mysql/tmp:/var/lib/mysql
    networks:
      - webdbnet
    depends_on:
      - redis

  redis:
    image: redis:latest
    ports:
    - "6379:6379"
    volumes:
      - ./redis/data:/data
    command: redis-server --appendonly yes
    networks:
      - webdbnet

  rails_app:
    # stdin_open: true
    # tty: true
    build: ./rails_app
    command: bundle exec rails s -p 3000 -b 0.0.0.0
    volumes:
      - ./rails_app:/app
    ports:
      - "3000:3000"
    networks:
      - webdbnet

  postgres:
    image: postgres:11
    ports:
      - 5432:5432
    volumes:
      - ./postgres/db/tmp:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: Free123!
    networks:
      - webdbnet

  node_js:
    build: ./node_js
    command: nodemon
    volumes:
      - ./node_js:/src
    ports:
      - 5000:5000
    networks:
      - webdbnet
  mongo:
    image: mongo:latest
    container_name: "mongo"
    ports:
    - "27017:27017"
    volumes:
    - ./mongo/tmp:/data/db
    networks:
      - webdbnet

  golang:
    build: ./golang
    container_name: "golang"
    command: go run main.go
    volumes:
      - ./golang:/go/src/app
    working_dir: /go/src/app
    ports:
      - "3030:3000"
    environment:
      PORT: 3002
    networks:
      - webdbnet

networks:
  webdbnet:

# volumes:
#   web-data:
